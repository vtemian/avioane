// Generated by CoffeeScript 1.3.1
(function() {
  var Collissions;

  Collissions = (function() {

    Collissions.name = 'Collissions';

    function Collissions(opts) {
      this.squareHeight = opts.holder.squareHeight;
      this.position = opts.holder.position;
      this.context = opts.context;
      this.canvas = opts.canvas;
      this.collissions = [];
      this.fillStyle = "#FFF";
      this.canvas.oncontextmenu = function() {
        return false;
      };
    }

    Collissions.prototype.resetCollissions = function() {
      this.collissions = [];
      return this.clearRect();
    };

    Collissions.prototype.clearRect = function() {
      return this.context.clearRect(this.position.top, this.position.left, this.squareHeight * this.squareHeight, this.squareHeight * this.squareHeight);
    };

    Collissions.prototype.drawCollissions = function() {
      var position, x, y, _i, _len, _ref, _results;
      this.context.fillStyle = this.fillStyle;
      _ref = this.collissions;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        position = _ref[_i];
        x = position.x * this.squareHeight + this.position.top;
        y = position.y * this.squareHeight + this.position.left;
        _results.push(this.context.fillRect(x, y, this.squareHeight, this.squareHeight));
      }
      return _results;
    };

    Collissions.prototype.checkCollissions = function(plane1, plane2) {
      var collissions, matrix1, matrix2, position, position2, _i, _j, _len, _len1;
      matrix1 = plane1.matrixPosition;
      matrix2 = plane2.matrixPosition;
      collissions = false;
      if (matrix1.length && matrix2.length) {
        for (_i = 0, _len = matrix1.length; _i < _len; _i++) {
          position = matrix1[_i];
          for (_j = 0, _len1 = matrix2.length; _j < _len1; _j++) {
            position2 = matrix2[_j];
            if (position.x === position2.x && position.y === position2.y) {
              collissions = true;
              this.collissions.push(position);
            }
          }
        }
      }
      return collissions;
    };

    return Collissions;

  })();

  window.Collissions = Collissions;

}).call(this);
